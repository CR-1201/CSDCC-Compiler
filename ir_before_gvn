declare dso_local i32 @getint()
declare dso_local i32 @getch()
declare dso_local float @getfloat()
declare dso_local i32 @getarray(i32* %a0)
declare dso_local i32 @getfarray(float* %a0)
declare dso_local void @putint(i32 %a0)
declare dso_local void @putch(i32 %a0)
declare dso_local void @putfloat(float %a0)
declare dso_local void @putarray(i32 %a0, i32* %a1)
declare dso_local void @putfarray(i32 %a0, float* %a1)
declare dso_local void @_sysy_starttime()
declare dso_local void @_sysy_stoptime()
define dso_local void @my_putint(i32 %a0) {
b0:
	%v1 = alloca [16 x i32]
	br label %b1
b1:
	%p2 = phi i32 [ %a0, %b0 ],  [ %v13, %b2 ]
	%p0 = phi i32 [ 0, %b0 ],  [ %v15, %b2 ]
	%v4 = icmp sgt i32 %p2, 0
	br i1 %v4, label %b2, label %b3
b2:
	%v6 = getelementptr inbounds [16 x i32], [16 x i32]* %v1, i32 0, i32 %p0
	%v8 = sdiv i32 %p2, 10
	%v9 = mul i32 %v8, 10
	%v10 = sub i32 %p2, %v9
	%v11 = add i32 %v10, 48
	store i32 %v11, i32* %v6
	%v13 = sdiv i32 %p2, 10
	%v15 = add i32 %p0, 1
	br label %b1
b3:
	br label %b4
b4:
	%p1 = phi i32 [ %p0, %b3 ],  [ %v19, %b5 ]
	%v17 = icmp sgt i32 %p1, 0
	br i1 %v17, label %b5, label %b6
b5:
	%v19 = sub i32 %p1, 1
	%v21 = getelementptr inbounds [16 x i32], [16 x i32]* %v1, i32 0, i32 %v19
	%v22 = load i32, i32* %v21
	call void @putch(i32 %v22)
	br label %b4
b6:
	ret void
}
define dso_local i32 @main() {
b7:
	%v24 = call i32 @getint()
	br label %b8
b8:
	%p3 = phi i32 [ %v24, %b7 ],  [ %v31, %b9 ]
	%v26 = icmp sgt i32 %p3, 0
	br i1 %v26, label %b9, label %b10
b9:
	%v28 = call i32 @getint()
	call void @my_putint(i32 %v28)
	call void @putch(i32 10)
	%v31 = sub i32 %p3, 1
	br label %b8
b10:
	ret i32 0
}
