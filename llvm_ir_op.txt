@_g_arr = dso_local global [6 x i32] [i32 1, i32 2, i32 33, i32 4, i32 5, i32 6]

declare dso_local i32 @getint()
declare dso_local i32 @getch()
declare dso_local float @getfloat()
declare dso_local i32 @getarray(i32* %a0)
declare dso_local i32 @getfarray(float* %a0)
declare dso_local void @putint(i32 %a0)
declare dso_local void @putch(i32 %a0)
declare dso_local void @putfloat(float %a0)
declare dso_local void @putarray(i32 %a0, i32* %a1)
declare dso_local void @putfarray(i32 %a0, float* %a1)
declare dso_local void @memset(i32* %a0, i32 %a1, i32 %a2)
declare dso_local void @_sysy_starttime()
declare dso_local void @_sysy_stoptime()
define dso_local i32 @main() {
b0:
	%v6 = getelementptr inbounds [6 x i32], [6 x i32]* @_g_arr, i32 0, i32 0
	%v7 = load i32, i32* %v6
	%v10 = add i32 0, 1
	%v8 = add i32 0, %v7
	%v12 = getelementptr inbounds [6 x i32], [6 x i32]* @_g_arr, i32 0, i32 %v10
	%v13 = load i32, i32* %v12
	%v14 = add i32 %v10, 1
	%v15 = add i32 %v8, %v13
	%v16 = getelementptr inbounds [6 x i32], [6 x i32]* @_g_arr, i32 0, i32 %v14
	%v17 = load i32, i32* %v16
	%v18 = add i32 %v14, 1
	%v19 = add i32 %v15, %v17
	%v20 = getelementptr inbounds [6 x i32], [6 x i32]* @_g_arr, i32 0, i32 %v18
	%v21 = load i32, i32* %v20
	%v22 = add i32 %v18, 1
	%v23 = add i32 %v19, %v21
	%v24 = getelementptr inbounds [6 x i32], [6 x i32]* @_g_arr, i32 0, i32 %v22
	%v25 = load i32, i32* %v24
	%v26 = add i32 %v22, 1
	%v27 = add i32 %v23, %v25
	%v28 = getelementptr inbounds [6 x i32], [6 x i32]* @_g_arr, i32 0, i32 %v26
	%v29 = load i32, i32* %v28
	%v31 = add i32 %v27, %v29
	ret i32 %v31
}
